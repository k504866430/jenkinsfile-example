buildscript {
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

plugins {
    id 'org.springframework.boot' version '2.0.3.RELEASE'
    //id 'com.palantir.docker' version '0.12.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
//apply plugin: "com.jfrog.artifactory"
apply plugin: 'docker'

//eclipse plugin configuration
eclipse.classpath.file {
    beforeMerged { classpath ->
        classpath.entries.removeAll { entry -> entry.kind == 'lib' || entry.kind == 'var' }
    }
    whenMerged { classpath ->
        classpath.entries.findAll { entry -> entry.kind == 'lib' }*.exported = false
    }
}

eclipse.project.file.beforeMerged { project ->
    project.natures.clear()
}

repositories {
    mavenCentral()
}

group = 'com.kruttik'
version =  '0.1.0'

jar {
    manifest.attributes provider: 'gradle'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task buildDocker(type: Docker, dependsOn: build) {
  //push = true
  applicationName = jar.baseName
  dockerfile = file('Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
      rename("${stageDir}/${jar.archiveName}", "${stageDir}/${jar.baseName}.${jar.extension}") 
    }
  }
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-jetty"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "joda-time:joda-time:2.2"
    testCompile "junit:junit:4.12"
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

